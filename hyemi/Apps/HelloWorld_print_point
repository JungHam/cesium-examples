<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Use correct character set. -->
    <meta charset="utf-8">
    <!-- Tell IE to use the latest, best version. -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Make the application on mobile take up the full browser screen and disable user scaling. -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no">
    <title>Hello World!</title>
    <script src="../Build/Cesium/Cesium.js"></script>
    <script src='../js/libs/papaparse.min.js' type='text/javascript'></script>
    <script src="../js/loader/IndoorGMLLoader.js"></script>
    <script src='../js/libs/jquery-1.8.0.min.js' type='text/javascript'></script>
    <script type="text/javascript" src="Sandcastle/Sandcastle-header.js"></script>
    <script src="../js/viewer.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.1/angular.min.js"></script>
    <link href="sandbox.css" rel="stylesheet" />
    <style>
        @import url(Sandcastle/templates/bucket.css);
        #toolbar {
            background: rgba(42, 42, 42, 0.8);
            padding: 2px;
            border-radius: 4px;
        }

        #toolbar input {
            vertical-align: middle;
            padding-top: 2px;
            padding-bottom: 2px;
        }
    </style>
</head>

<body>
    <div id="cesiumContainer" class="fullSize"></div>
    <div id="toolbar">
    <label></label>
    </div>
    <script>
        var viewer = new Cesium.Viewer('cesiumContainer');
        var hur_data = Cesium.GeoJsonDataSource.load('hurricane.json');
        if(hur_data)console.log('canread');

        $.getJSON("hurricane.json", function(data) { //read cesium data
        console.log(data);
        //for(var i in data){
        //  console.log(data[i].properties.name);
        //}
        Cesium.Math.setRandomNumberSeed(0);
//data[i].temporalGeometry.coordinates is the list of coordinates of hurricane.
      //var x_list = data[0].temporalGeometry.coordinates[0][0];
      //var y_list = data[0].temporalGeometry.coordinates[0][1];
      var new_label_list = new String();//the names of hurricanes
      var point_list = data[0].temporalGeometry.coordinates;
      console.log(data[0].temporalGeometry.coordinates);
      console.log(data[0].temporalGeometry.coordinates[0]);

      var points = viewer.scene.primitives.add(new Cesium.PolylineCollection());

      var colorHash = {};
      for(var i in data){
        var point_list = data[i].temporalGeometry.coordinates; //a hurricane
        var color = colorHash[data[i].properties.name];
        var new_label_list += "<label style='color:white'>"+data[i].properties.name+"</label></br>";
        console.log(color);
        if (!color) {
                color = Cesium.Color.fromRandom({
                    alpha : 1.0
                });
                colorHash[name] = color;
        }//set color as random
        console.log(color);
        var p_list = [];
        for(var j in point_list){ //set point per coordinates in a hurricane

          p_list[2*j] = point_list[j][0];
          p_list[2*j+1] = point_list[j][1];
        }


            points.add({
             positions : Cesium.Cartesian3.fromDegreesArray(p_list),
             color : color,
             width : 2
           });
        }



      });

      var tag = new_label_list$("#toolbar").html(tag);



        function change() {
            var elem = document.getElementById("myButton1");

            if (elem.value == "Close Curtain"){
               elem.value = "Open Curtain";
              document.getElementById("myText1").innerHTML = "Text is changed";
            }
            else{
              elem.value = "Close Curtain";
              document.getElementById("myText1").innerHTML = "Text is not changed";
            }
        }
    </script>
</body>

</html>
